//Q1-
#include<iostream>
#include<unordered_map>
using namespace std;
int main()
{
    int t;
    cin >> t;
    while(t--)
    {
        int n;
        cin >> n;
        char a[n];
        for(int i = 0; i < n; i++)
            cin >> a[i];
        unordered_map<char, int> mp;
        for(int i = 0; i < n; i++)
            mp[a[i]]++;
        int maxm = 1;
        char max_char;
        for(int i = 0; i < n; i++)
        {
            if(mp[a[i]] > maxm)
            {
                maxm = mp[a[i]];
                max_char = a[i];
            }
        }
        if(maxm > 1)
            cout << max_char << " - " << maxm << endl;
        else
            cout << "No Duplicates Present" << endl;
    }
}

//Q2-
#include<iostream>
#include<vector>
#include<unordered_map>
using namespace std;

vector<vector<int>> ans;

void twoSum(int a[], int n, int target)
{
    unordered_map<int, int> mp;
    for(int i = 0; i < n; i++)
    {
        if(mp.find(target - a[i]) != mp.end())
        {
            vector<int> res;
            res.push_back(target - a[i]);
            res.push_back(a[i]);
            ans.push_back(res);
        }
        mp[a[i]] = i;
    }
    cout << "In func " << ans.size() << endl;
    //return ans;
}
int main()
{
    int t;
    cin >> t;
    while(t--)
    {
        int n;
        cin >> n;
        int a[n];
        for(int i = 0; i < n; i++)
            cin >> a[i];
        int key;
        cin >> key;
        twoSum(a, n, key);
        if(ans.size() == 0)
            cout << "No such pair exist" << endl;
        else
        {
            for(int i = 0; i < ans.size(); i++)
                cout << ans[i][0] << "," << ans[i][1] << endl;
        }
    }
}

//Q3-

#include<iostream>
using namespace std;
int main()
{
    int t;
    cin >> t;
    while(t--)
    {
        int n1, n2;
        cin >> n1;
        int a[n1];
        for(int i = 0; i < n1; i++)
            cin >> a[i];
        cin >> n2;
        int b[n2];
        for(int i = 0; i < n2; i++)
            cin >> b[i];
        int i = 0, j = 0;
        while(i < n1 && j < n2)
        {
            if(a[i] == b[j])
            {
                cout << a[i] << " " <<;
                i++; j++;
            }
            else if(a[i] < b[j])
                i++;
            else if(b[j] < a[i])
                j++;
        }
        cout << endl;
    }
}
