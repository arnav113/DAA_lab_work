//Q1 - 
#include<iostream>
using namespace std;
int solve(int a[], int lb, int ub, int key, int OccurenceDir)
{
    int mid, ans = -1;    //Initially answer is not found or -1
    while(lb <= ub)
    {
        mid = (lb + ub) / 2;
        if(a[mid] < key)
            lb = mid + 1;
        else if(a[mid] > key)
            ub = mid - 1;
        else
        {
            ans = mid;
            if(OccurenceDir)
                ub = mid -1;
            else
                lb = mid + 1;
        }
    }
    return ans;
}
int main()
{
    int t;
    cin >> t;
    while(t--)
    {
        int n;
        cin >> n;
        int *a = new int[n];
        for(int i = 0; i < n; i++)
            cin >> a[i];    //Sorted
        int key;
        cin >> key;
        int first = solve(a, 0, n - 1, key, 1);   //Left direction
        int last = solve(a, 0, n - 1, key, 0);    //Right direction
        if(first != -1 || last != -1)
            cout << key << " - " << last - first + 1 << endl;
        else
            cout << "Key not present" << endl;
    }
    return 0;
}

//Q2-
#include<iostream>
using namespace std;
int solve(int a[], int n, int lb, int k)
{
    int ub = n - 1;
    while(lb <= ub)
    {
        int mid = (ub + lb) / 2;
        if(a[mid] == k)
            return mid;
        else if(a[mid] > k)
            ub = mid - 1;
        else
            lb = mid + 1;
    }
    return 0;
}
int main()
{
    int t;
    cin >> t;
    while(t--)
    {
        int n;
        cin >> n;
        int f = 0;
        int *a  = new int[n];
        for(int i = 0; i < n; i++)
            cin >> a[i];
        for(int i = 0; i < n - 1; i++)
        {
            for(int j = i + 1; j < n; j++)
            {
                int k = a[i] + a[j];
                int ans = solve(a, n, j + 1, k);
                if(ans != 0)
                {
                    cout << i + 1 << " " << j + 1 << " " << ans + 1 << endl;
                    f = 1;
                    break;
                }
            }
            if(f)
                break;
        }
        if(!f)
            {
                cout << "No Sequence Found" << endl;
                break;
            }
    }
}

//Q3- 
#include<iostream>
#include<algorithm>
using namespace std;
int solve(int a[], int n, int k)
{
    int c = 0;
    for(int i = 0; i < n - 1; i++)
    {
        int l = i + 1;
        int h = n - 1;
        while(l <= h)
        {
            int mid = (l + h) / 2;
            if(a[mid] == a[i] + k)
            {
                c++;
                break;
            }
            else if(a[i] + k > a[mid])
                l = mid + 1;
            else
                h = mid - 1;
        }
    }
    return c;
}
int main()
{
    int t, n;
    cin >>t;
    while(t--)
    {
        cin >> n;
        int a[n];
        for(int i = 0; i < n; i++)
            cin >> a[i];
        int k;
        cin >> k;
        sort(a, a + n);
        cout << solve(a, n, k);
    }
}
